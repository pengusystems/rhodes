
        <head>
          <meta charset="UTF-8">
        </head>
        <style>
        * {
          font-family: "Times New Roman";
        }

        td, th {
          padding: 3px 7px 2px 7px;
        }

        th {
          font-size: 1.1em;
          text-align: left;
          padding-top: 5px;
          padding-bottom: 4px;
        }
        </style>
        <body><h1>Multithreaded average CS sample program</h1>

<p>ATS-SDK version 7.1.5</p>

<p>© 2003-2016 Alazar Technologies, Inc.</p>

<h2>Introduction</h2>

<p>This sample program demonstrates how to make a multithreaded average
CS acquisition. The sample program is part of the
AlazarTech SDK, and is documented in the 'AlazarTech SDK Programmer's
Guide'.</p>

<h2>System requirements</h2>

<p>Under Windows, Microsoft Visual C++ 6, Microsoft Visual C++ 2008 or later is required to build this
C sample program. The sample includes a Visual C++ 6 workspace file for 32-bit platforms, and Visual
C++ 2008 solution for for 32 and 64-bit platforms.</p>

<p>The AlazarTech ATS9350 drivers version 5.10.14
of later are required to run the sample program. They can be
downloaded from <a href="http://www.alazartech.com/support/downloads.htm">our
website</a>.</p>

<p>ATS9350 has a PCI bus interface capable of sustained data
transfers up to 1.6 GB/s.</p>

<h2>Getting started</h2>

<p>To get the most from an AlazarTech ATS9350 digitizer board, a
programmer should:</p>

<ol>
<li><p>Read the "ATS9350 User Guide". It provides an overview of
the digitizer board's hardware features, as well as it's
specifications.</p></li>
<li><p>Read the "AlazarTech SDK Programmer's Guide". It describes how to
program the digitizier hardware to make an acquisition, and to
transfer sample data into application buffers.</p></li>
</ol>

<h2>Dual-port AutoDMA acquisitions</h2>

<p>A dual-port AutoDMA acquisition allows a board to acquire to on-board
memory while, at the same time, transferring sample data from on-board
memory to application buffers.</p>

<p>AutoDMA acquisitions should be used when:</p>

<ul>
<li><p>The average data acquisition rate is less than the maximum PCIe bus
transfer rate.</p></li>
<li><p>An application cannot miss trigger events that occur while it
transfers data from host to memory, or re-arms a board for another
acquisition.</p></li>
<li><p>An application acquires more sample points or records per
acquisition than can be stored in on-board memory.</p></li>
</ul>

<p>Scanning applications such as ultrasonic testing, OCT, RADAR and LIDAR
imaging should use AutoDMA acquisitions.</p>

<p>An AutoDMA acquisition is divided into segments. AutoDMA hardware on a
board transfers sample data, one segment at a time, from on-board
memory to a buffer in host memory. There may be an unlimited number of
segments in an AutoDMA acquisition, so a board can be armed to make an
acquisition of infinite duration.</p>

<h2>Code overview</h2>

<p>The program is divided into three major parts:</p>

<h3>1. Obtain a board handle</h3>

<p>This code obtains a handle to a board specified by its system and
board identifiers. See section 2.1 <em>Addressing a board</em> of the
AlazarTech SDK Programmer's Guide for more information about using
board identifiers and handles.</p>

<h3>2. Configure the board</h3>

<p>The code in the <code>ConfigureBoard()</code> function calls AlazarTech API
functions to configure the time base, analog inputs, and trigger
system of the board specified by its handle.</p>

<p>An application must call these API functions as required before making
an acquisition. However, if the application continues to make other
acquisitions, it does not need to call these functions again unless a
parameter changes.</p>

<p>See section 2.2 <em>Configuring a board</em> of the AlazarTech SDK
Programmer's Guide for more information about how to configure a
board.</p>

<h3>3. Acquiring data</h3>

<p>This sample arms a board to acquire a single record per channel
spanning several AutoDMA buffers. It demonstrates how to make an
acquisition in C environment.</p>

<p>It calls <code>AlazarPostAsyncBuffer()</code> to supply buffers to the board, and
<code>AlazarWaitAsyncBufferComplete()</code> to wait for the buffers to be filled
by the board.</p>

<h2>Modifying the sample program</h2>

<p>The AcqToDisk.cpp file contains the code to configure a board, make an
acquisition, transfer sample data to application buffers and
optionally save sample data to file.</p>

<p>Acquisition parameters should be modified to suit the application. All
of the lines containing such parameters are labeled with <code>TODO</code>
comments. Search for there lines in the source files, and modify them
as required.</p>

<h2>Building the sample program</h2>

<h3>Microsoft Visual C++ 6</h3>

<ul>
<li><p>Open the “AcqToDisk.dsw” project workspace in the sample directory.</p></li>
<li><p>Select “Build | Set Active Configuration” menu command to display
the “Select Active Project Configuration” dialog box, and select
the “Debug” build or “Release” build as required.</p></li>
<li><p>Select the “Build | Build CS.exe” command to build the sample
program.</p></li>
</ul>

<p>If a build succeeds, it creates one of the following executables:</p>

<ul>
<li>Debug mode : Debug\CS.exe</li>
<li>Release mode : Release\CS.exe</li>
</ul>

<h3>Microsoft Vistual C++ 2008</h3>

<ul>
<li><p>Open the “AcqToDisk.sln” solution in the sample directory.</p></li>
<li><p>Select the “Build | Configuration Manager” to display the
“Configuration Manager” dialog and select the desired configuration
and platform.</p></li>
<li><p>Select the “Build | Build Solution” command to build the sample
program.</p></li>
</ul>

<p>If a build succeeds, it creates one of the following executables:</p>

<ul>
<li>32-bit Debug: Win32\Debug\AcqToDisk.exe</li>
<li>32-bit Release: Win32\Release\AcqToDisk.exe</li>
<li>64-bit Debug: x64\Debug\AcqToDisk.exe</li>
<li>64-bit Release: x64\Release\AcqToDisk.exe</li>
</ul>

<h3>Makefile</h3>

<ul>
<li>type "make", and then "./AcqToDisk"</li>
</ul>

<h2>Contact us</h2>

<p>If you have any questions or comments, or need assistance, contact us.</p>

<ul>
<li>Web:    <a href="http://www.alazartech.com">www.alazartech.com</a></li>
<li>Email:  <a href="mailto:support@alazartech.com">support@alazartech.com</a></li>
<li>Phone:  514-426-4899</li>
<li>Fax:    514-426-2723</li>
<li>Mail:   Alazar Technologies Inc.
       6600 Trans-Canada Highway, Suite 310
       Pointe-Claire, QC
       Canada H9R 4S2</li>
</ul>
</body>